<launch>
	<remap from="/navigation/localization/amcl_pose" to="/navigation/localization/current_pose"/>
	<remap from="/dynamic_map" to="/navigation/localization/static_map"/>   
	<param name="robot_description" command="cat $(find knowledge)/hardware/justina.xml" />
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/>
	<group ns="hardware">
		<node name="mobile_base" pkg="mobile_base" type="omni_base.py" output="screen" args="--port1 /dev/justinaRC30 --port2 /dev/justinaRC15"/>
		<node name="left_arm" pkg="arms" type="left_arm_node.py" output="screen" args="--port1 /dev/justinaLeftArm --baud1 200000" respawn="true"/>
		<node name="right_arm" pkg="arms" type="right_arm_node.py" output="screen" args="--port1 /dev/justinaRightArm --baud1 200000" respawn="true"/>
		<node name="init_arms" pkg="arms" type="initializing_arms_node.py" output="screen"/>
		<node name="head" pkg="head" type="head_node.py" output="screen" args="--port /dev/justinaHead --baud 1000000"/>
		<!-- <node name="torso" pkg="torso" type="torso_simul_node.py"/> -->
		<node name="torso" pkg="torso" type="torso_node_A.py" output="screen"/>
		<node name="joy" pkg="joy" type="joy_node" output="screen"/>
		<node name="kinect_man" pkg="kinect_man" type="kinect_man_node" output="screen"/>
		
	</group>
	<group ns="hri">
		<node name="rviz" pkg="rviz" type="rviz" args="-d $(find knowledge)/hri/rviz_mapping.rviz"/>
		<node name="justina_gui" pkg="justina_gui" type="justina_gui_node" output="screen"
			args="-p $(find knowledge)/navigation/"/>
		<node name="sp_gen" pkg="sp_gen" type="sp_gen_node" output="screen"/>
		
		<node name="hybrid_follower" pkg="hybrid_follower" type="hybrid_follower_node" output="screen"/>
	</group>
	<node name="bbros_bridge" pkg="bbros_bridge" type="bbros_bridge_all.py" output="screen" args="-f $(find bbros_bridge)/src/files/topics_inclusion_list.json"/>
	<group ns="interoperation">
		<node name="joystick_teleop" pkg="joystick_teleop" type="joystick_teleop_node.py" output="screen" />
	</group>
	<group ns="manipulation">
		<node name="ik_geometric" pkg="ik_geometric" type="ik_geometric_node" output="screen"/>
		<node name="manip_pln" pkg="manip_pln" type="manip_pln_node" output="screen" args="-f $(find knowledge)/manipulation/predef_poses/"/>
	</group>
	<group ns="navigation">
		<group ns="path_planning">
			<node name="simple_move" pkg="simple_move" type="simple_move_node" output="screen" args="--move_head"/>
			<node name="path_calculator" pkg="path_calculator" type="path_calculator_node" output="screen"/>
		</group>

		<group ns="obs_avoid">
			<node name="obstacle_detector" pkg="obs_detect" type="obs_detect_node" respawn="true" output="screen" args="--z_threshold 0.1 --max_x 0.7"/>
		</group>
		<node name="mvn_pln" pkg="mvn_pln" type="mvn_pln_node" output="screen" args="--max_attempts 25"/>
	</group>
	<group ns="vision">
		<node name="face_recog" pkg="face_recog" type="face_recog_node" output="screen"/>
		<!-- node name="skeleton_finder" pkg="skeleton_finder" type="skeleton_finder_node" output="screen"/-->
		<node name="openpose_node" pkg="openpose" type="open_pose_node" output="screen">
			<param name="debug_mode" value="false"/>
			<param name="file_links_config" value="$(find openpose)/OpenPoseConfig.xml"/>
			<param name="model_folder" value="$(env OPENPOSE_HOME)/models/"/>
			<remap from="/vision/openpose/enable_estimate_pose" to="/vision/skeleton_finder/enable_tracking"/>
		</node>
		<node name="gesture_recog_skeleton" pkg="gesture_recog_skeleton" type="gesture_recog_node" output="screen">
			<param name="gesture_method" value="2"/>
		</node>
		<node name="obj_reco" pkg="obj_reco" type="obj_reco_node" output="screen" args="--db $(find obj_reco)/TrainingDir/"/>
		<node name="hand_detect_in_BB" pkg="hand_recog" type="hand_detect_in_BB_node" output="screen"/>
		<node name="roi_tracker" pkg="roi_tracker" type="roi_tracker_node" output="screen"/>
	</group>

	<group ns="knowledge">
		<node name="ltm" pkg="knowledge" type="ltm_node" output="screen"
			args="-f $(find knowledge)/navigation/known_locations_bioroboanexo.txt"/>
		<node name="pred_ques" pkg="knowledge" type="pred_ques_node" output="screen"
			args="-f $(find knowledge)/speech_recognition/Questions.xml"/>
		<node name="pred_arms_poses" pkg="knowledge" type="pred_poses_mani_node" output="screen"
			args="-f $(find knowledge)/manipulation/predef_poses/"/>
	</group>

	<node name="gmapping" pkg="gmapping" type="slam_gmapping" args="scan:=/hardware/scan" output="screen">
		<param name="map_update_interval" value="1.0" />
		<param name="maxUrange" value="7.8"/>
		<param name="linearUpdate" value="0.3"/>
		<param name="angularUpdate" value="0.2"/>
		<param name="xmin" value="-50"/>
		<param name="ymin" value="-20"/>
		<param name="xmax" value="50"/>
		<param name="ymax" value="20"/>
		<param name="maxRange" value="8.0"/>
		<param name="minimumScore" value="50"/>
	</node>
</launch>
