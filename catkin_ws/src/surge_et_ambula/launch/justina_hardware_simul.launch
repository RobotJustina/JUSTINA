<launch>
    <remap from="/hardware/mobile_base/odometry" to="/navigation/localization/base_pose_ground_truth"/>
    <remap from="/navigation/localization/amcl_pose" to="/navigation/localization/current_pose"/>
    <param name="robot_description" command="cat $(find knowledge)/hardware/justina.xml" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/>
    <node name="gmapping_link_publisher" pkg="tf" type="static_transform_publisher" args="0 0 0.0 0 0 0 map odom 100"/>
    <group ns="hardware">
        <node name="mobile_base" pkg="mobile_base" type="omni_base_old.py" output="screen" args="--simul"/>
        <node name="left_arm" pkg="arms" type="left_arm_simul_node.py" output="screen"/>
        <node name="right_arm" pkg="arms" type="right_arm_simul_node.py" output="screen"/>
	<node name="head" pkg="head" type="head_real_simul_node.py" output="screen" args="--port /dev/justinaHead --baud 1000000 --simul"/>
        <!-- <node name="head" pkg="head" type="head_simul_node.py" output="screen"/> -->
        <node name="torso" pkg="torso" type="torso_node.py" output="screen" args="--simul"/>
        <node name="joy" pkg="joy" type="joy_node" output="screen"/>
        <node name="laser_simul" pkg="laser_simulator" type="laser_simulator_node" args="--bag $(find laser_simulator)/bags/example.bag" output="screen"/>
        <node name="kinect_man" pkg="kinect_man" type="kinect_man_node" output="screen" args="--bag $(find kinect_man)/videos/example.bag"/>
        <!-- <node name="point_cloud_man" pkg="point_cloud_manager" type="point_cloud_man_node" output="screen" args=" ()defpath $(find knowledge)/hardware/point_clouds/"/> -->
    </group>
    <group ns="navigation">
        <group ns="localization">
            <node name="map_server" pkg="map_server" type="map_server" output="screen"
                  args="$(find knowledge)/navigation/occupancy_grids/bioroboanexo4.yaml"/>
            <node name="fake_localization" pkg="fake_localization" type="fake_localization"/>
        </group>
    </group> 
    <group ns="knowledge">
    	<node name="ltm" pkg="knowledge" type="ltm_node" output="screen"
    		args="-f $(find knowledge)/navigation/known_locations_bioroboanexo2.txt"/>
        <node name="pred_ques" pkg="knowledge" type="pred_ques_node" output="screen"
		args="-f $(find knowledge)/speech_recognition/Questions.xml"/>
	    <node name="pred_arms_poses" pkg="knowledge" type="pred_poses_mani_node" output="screen"
		  args="-f $(find knowledge)/manipulation/predef_poses/"/>
    </group>      
</launch>
